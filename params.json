{"name":"Atom Message Panel","tagline":"An easy way to display your messages in Atom","body":"# The Atom Message Panel\r\n\r\n[![Gitter chat](https://badges.gitter.im/tcarlsen/atom-message-panel.png)](https://gitter.im/tcarlsen/atom-message-panel)\r\n\r\n> The easy way to display your messages in [Atom](http://atom.io).\r\n\r\n![preview](https://cloud.githubusercontent.com/assets/145288/2628677/25f9ba7a-be2b-11e3-9780-8172cf7ea292.png)\r\n\r\n## Why!?\r\n\r\nTo streamline how plugin messages are displayed in Atom! :fist:\r\n\r\n## Usage\r\n\r\n**JavaScript:**\r\n\r\n```javascript\r\nvar MessagePanelView = require('atom-message-panel').MessagePanelView,\r\n    PlainMessageView = require('atom-message-panel').PlainMessageView;\r\n\r\nvar messages = new MessagePanelView({\r\n  title: 'It\\'s alive..... IT\\'S ALIIIIIVE!!!!'\r\n});\r\n\r\nmessages.attach();\r\n\r\nmessages.add(new PlainMessageView({\r\n  message: 'I did it mommy, I made my first Atom Message Panel!',\r\n  className: 'text-success'\r\n}));\r\n```\r\n\r\n**CoffeeScript:**\r\n\r\n```coffeescript\r\n{MessagePanelView, LineMessageView} = require 'atom-message-panel'\r\n\r\nmessages = new MessagePanelView title: 'Remember your Coffee!'\r\n\r\nmessages.attach()\r\n\r\nmessages.add new LineMessageView line: 1, character: 4, message: 'You haven\\'t had a single drop of coffee since this character'\r\n```\r\n\r\n## API\r\n\r\n**MessagePanelView:**\r\n\r\n*It all depends on this guy, this is your init function and you will need it :sunglasses:*\r\n\r\n * `new MessagePanelView(params)`:\r\n  - `title`: the title of your panel\r\n  - `rawTitle`: sat to `true` will allow the title to contains HTML *(default is false)*\r\n  - `closeMethod`: What should the close button do? `detach` *(default)* or `hide`.\r\n  - `speed`: how fast you what the fold/unfold function to run *(default is fast)*\r\n  - `pane`: attach to the active pane instead of the workspaceView *(default is false)* *(note: going into split-screen after amp have been activated, amp will stay at the pane it was activated on. see this [example](http://gfycat.com/UntimelyObedientGrub))*\r\n * `attach()`: append the panel to the Atom view\r\n * `close()`: closses the panel\r\n * `setTitle()`: change the panel title\r\n * `toggle()`: fold/unfold the panel\r\n * `clear()`: clear the body\r\n * `add()`: add a view to the panel\r\n\r\n**PlainMessageView:**\r\n\r\n*Lets you add a simple message :speech_balloon:*\r\n\r\n * `PlainMessageView(params)`:\r\n  - `message`: your message to the people\r\n  - `raw`: sat to `true` will allow the mesage to contains HTML *(default is false)*\r\n  - `className`: adding css classes to your message *(this is optional)*\r\n\r\n**LineMessageView:**\r\n\r\n*Lets you add messages for a specific line and character, and it will even navigate the user to that position with a single click :boom:*\r\n\r\n  * `LineMessageView(params)`:\r\n   - `message`: your message to the people\r\n   - `line`: what line are we talking about?\r\n   - `file`: so, was that in some other file? *(this is optional)*\r\n   - `character`: lets be more specific of what we are talking about *(this is optional)*\r\n   - `preview`: lets you display a code snippet inside a `pre` tag *(this is optional)*\r\n   - `className`: adding css classes to your message *(this is optional)*\r\n\r\n## License\r\n\r\n[MIT](LICENSE.md) Â© tcarlsen\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}